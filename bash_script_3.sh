#!/bin/bash

#--------------------------------------------------------------------
# глобальные переменные для разукрашивания вывода echo
#--------------------------------------------------------------------

RED='\033[0;31m' # красный текст

YELLOW='\033[0;33m' # желтый текст

GREEN='\033[0;32m' # зеленый текст

MAGENTA='\033[0;35m' # фиолетовый текст

NORMAL='\033[0m' # атрибуты по умолчанию

#--------------------------------------------------------------------
# объявление основных глобальных переменных 
#--------------------------------------------------------------------

ok=0 # переменная-флаг для обработки ввода 

ch=0 # переменная для обработки выбора 

#--------------------------------------------------------------------
# функция, выводящая досье студента(ов) по фамилии на латинице
#--------------------------------------------------------------------

echo -e "${GREEN}Введите фамилию студента (на латинице):${NORMAL}"

# ввод и проверка имени студента
while [[ $ok -eq 0 ]]; do # пока флаг проверки 0

        read -p "-> " s_sname # вводим фамилию жертвы

        # только с ЗАГЛАВНОЙ и никаких цифр, да
        if [[ "$s_sname" =~ ^[A-Z]{1}[a-z]{1,}$ ]]; then # сравниваем с шаблоном фамилию
             # если все ОК
                ok=1 # делаем 1 для выхода из цикла проверки
        else # ошибка при вводе
                echo -e "\n${RED}ОШИБКА: фамилия введена неверно! В фамилии не должно быть чисел, и фамилия должна начинаться с заглавной буквы!${NORMAL}"
                echo -e "${RED}Попробуйте еще раз!${NORMAL}\n"
        fi
done

# заменяем все кроме первой заглавной на Names.log
# так как все лог файлы начинаются с буквы фамилии
file_name=$(echo $s_sname | sed "s/[a-z]*$/Names.log/g")

# ищем лог файл по строке, полученной выше
file_path=$(find labfiles/ -name $file_name)

if ! [[ -z $file_path ]]; then

# тут совпадение и номер строки
# затем убираем совпадение, чтобы остался только номер
# так же, если несколько найденных вариков, то преобразовываем их из столбца
# в строку для дальнейшей записи в массив
str_num=$(grep -n "$s_sname" $file_path | sed -z -e "s/:[A-Za-z]*//g" -e "s/[\n\r]/ /g")

# обработка символов в найденной строке
#echo "$str_num" 
#echo "$(echo $str_num | wc -c)"

# формирование массива из номеров найденных строк
str_arr=($str_num)

# вывод сообщения, если найдено несколько людей с такой фамилией
if [[ "$str_num" =~ [[:space:]][0-9] ]]; then   # пробел перед числом => несколько чисел в строке
        # обработка ошибки
        echo ""
        echo -e "\n${YELLOW}ВНИМАНИЕ: найдено несколько фамилий! Будут выведены все найденные студенты!${NORMAL}\n"
fi

# проверка содержимого массива 
# echo "Массив номеров строк:"
# echo "${str_arr[@]}"  

# вывод сообщения, если массив ПУСТ, то есть в файлах НИЧЕГО не найдено
if [[ -z ${str_arr[@]} ]]; then
        echo ""
        echo -e "\n${YELLOW}ВНИМАНИЕ: такой студент не найден!${NORMAL}\n"
fi

# выводим досье 
for i in ${str_arr[@]}; do
echo ""
echo "Досье студента $(sed -n "${i}p" $file_path): " # берем строчку из файла с ником в БАРСе найденного студента...

# выводим на экран досье студента из лог файла
# со строки с позицией на ОДНУ НИЖЕ  и по разделитель ======
# echo $(($i-1)) # проверка индекса строки
sed -n "$(($i+1)) ,/\=/p" $file_path | sed "s/=*//g"
done
else
        echo -e "\n${RED}ОШИБКА: файл с досье студентов с фамилией $s_sname не найден!${NORMAL}\n"
fi
echo ""
