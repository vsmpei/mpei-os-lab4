#!/bin/bash

# глобальная для проверки
err=0

# глобальная выбора режима сортировки (возрастание или убывание)
ch=0

# ввод группы
echo "Введите интересующую Вас группу (на латинице): "

# ввод и проверка в цикле введенной группы
while [[ $err -eq 0 ]] # пока флаг проверки 0
do
	read gr_num # что-то вводим

	if [[ "$gr_num" =~ A-[0][0-9]-[0-9][0-9]$ ]] # сравниваем это что-то с шаблоном
	then # если все ОК
		err=1 # делаем 1 для выхода из цикла проверки
	else # все <3 <3 <3 <3 <3, давай по новой
		echo "Ошибка при вводе группы! Попробуйте еще раз!"
	fi
done	

# вводим интересующий предмет
echo "Введите какой предмет Вас интересует (на русском): "

err=0 # обнуляем

# ввод и проверка в цикле введенного предмета
while [[ $err -eq 0 ]] # пока флаг проверки 0
do
	read sub_n # опять вводим

	if [[ "$sub_n" == "Криптозоология" || "$sub_n" == "Пивоварение" ]] # опять сравниваем это что-то с шаблоном
	then # все ОК
		err=1
	else # почему всегда так сложно сделать все правильно? 
		echo "Ошибка при вводе предмета! Предметы для выбора: Криптозоология или Пивоварение!"
	fi

done	

# поиск файла с посещаемостью 
res=$(find ./labfiles/$sub_n -name "$gr_num-attendance") # результат записываем в переменную

# выбор сортировки (по убыванию или по возрастанию)

echo "Введите 1 для сортировки по возрастанию и 2 по убыванию:"

err=0 # обнуление ошибки
ch=0 # обнуление выбора

# очередная проверка, изумительно
while [[ $err -eq 0 ]] # пока флаг проверки 0
do
        read ch # снова вводим

        if [[ $ch == 1 || $ch == 2 ]] # снова сравниваем это что-то с ЧИСЛОМ
        then # все ОТЛИЧНО
                err=1
        else # такие дела
                echo "Ошибка при вводе ключа! Выберите 1 или 2!"
        fi

done

# вывод сообщения на экран 
echo ""
echo "Список группы $gr_num"
echo "Пользователь БАРС  |  Количество посещений"


if [[ $ch == 1 ]] # снова сравниваем это что-то с ЧИСЛОМ
then # сортировка по возрастанию
	cat $res | awk '{gsub(/0/, "", $2); len=length($2); gsub(/1*/, len, $2); print $1 "   " $2  }' | sort -n -k2 # поэтапное преобразование исходного списка и сортировка

else # сортировка по убыванию
        cat $res | awk '{gsub(/0/, "", $2); len=length($2); gsub(/1*/, len, $2); print $1 "   " $2  }' | sort -nr -k2 # сортировка с ключом -r ~ reverse

fi

# ДОБРО ПОЖАЛОВАТЬ НА ДНО
